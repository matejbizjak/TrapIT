-- MySQL Script generated by MySQL Workbench
-- Mon May 28 14:57:21 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `mydb` ;

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`role`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`role` ;

CREATE TABLE IF NOT EXISTS `mydb`.`role` (
  `role_id` INT NOT NULL AUTO_INCREMENT,
  `role` VARCHAR(32) NOT NULL,
  PRIMARY KEY (`role_id`),
  UNIQUE INDEX `role_UNIQUE` (`role` ASC),
  UNIQUE INDEX `role_id_UNIQUE` (`role_id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`user` ;

CREATE TABLE IF NOT EXISTS `mydb`.`user` (
  `user_id` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(256) NOT NULL,
  `password` VARCHAR(64) NOT NULL,
  `role_id` INT NOT NULL,
  `active` TINYINT NOT NULL DEFAULT 1,
  PRIMARY KEY (`user_id`),
  UNIQUE INDEX `username_UNIQUE` (`username` ASC),
  INDEX `user_role_fk_idx` (`role_id` ASC),
  UNIQUE INDEX `user_id_UNIQUE` (`user_id` ASC),
  CONSTRAINT `user_role_fk`
    FOREIGN KEY (`role_id`)
    REFERENCES `mydb`.`role` (`role_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`site`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`site` ;

CREATE TABLE IF NOT EXISTS `mydb`.`site` (
  `site_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(64) NOT NULL,
  PRIMARY KEY (`site_id`),
  UNIQUE INDEX `site_id_UNIQUE` (`site_id` ASC),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`path`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`path` ;

CREATE TABLE IF NOT EXISTS `mydb`.`path` (
  `path_id` INT NOT NULL AUTO_INCREMENT,
  `value` VARCHAR(128) NOT NULL,
  PRIMARY KEY (`path_id`),
  UNIQUE INDEX `path_id_UNIQUE` (`path_id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`media`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`media` ;

CREATE TABLE IF NOT EXISTS `mydb`.`media` (
  `media_id` INT NOT NULL AUTO_INCREMENT,
  `date` DATETIME NOT NULL,
  `name` VARCHAR(64) NOT NULL,
  `empty` TINYINT NOT NULL DEFAULT 1,
  `image` TINYINT NOT NULL DEFAULT 1,
  `interesting` TINYINT NOT NULL,
  `comment` TEXT NULL,
  `site_id` INT NOT NULL,
  `path_id` INT NOT NULL,
  PRIMARY KEY (`media_id`),
  UNIQUE INDEX `media_id_UNIQUE` (`media_id` ASC),
  INDEX `media_site_fk_idx` (`site_id` ASC),
  INDEX `media_path_fk_idx` (`path_id` ASC),
  CONSTRAINT `media_site_fk`
    FOREIGN KEY (`site_id`)
    REFERENCES `mydb`.`site` (`site_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `media_path_fk`
    FOREIGN KEY (`path_id`)
    REFERENCES `mydb`.`path` (`path_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`tag`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`tag` ;

CREATE TABLE IF NOT EXISTS `mydb`.`tag` (
  `tag_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(64) NOT NULL,
  PRIMARY KEY (`tag_id`),
  UNIQUE INDEX `tag_id_UNIQUE` (`tag_id` ASC),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`tag_value`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`tag_value` ;

CREATE TABLE IF NOT EXISTS `mydb`.`tag_value` (
  `tag_value_id` INT NOT NULL AUTO_INCREMENT,
  `value` VARCHAR(64) NOT NULL,
  `tag_id` INT NOT NULL,
  PRIMARY KEY (`tag_value_id`),
  UNIQUE INDEX `tag_value_id_UNIQUE` (`tag_value_id` ASC),
  INDEX `tag_tag_value_fk_idx` (`tag_id` ASC),
  CONSTRAINT `tag_tag_value_fk`
    FOREIGN KEY (`tag_id`)
    REFERENCES `mydb`.`tag` (`tag_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`parent_tag`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`parent_tag` ;

CREATE TABLE IF NOT EXISTS `mydb`.`parent_tag` (
  `parent_tag_id` INT NOT NULL AUTO_INCREMENT,
  `tag_value_id` INT NOT NULL,
  `tag_id` INT NOT NULL,
  PRIMARY KEY (`parent_tag_id`),
  UNIQUE INDEX `parent_tag_id_UNIQUE` (`parent_tag_id` ASC),
  INDEX `tag_parent_tak_fk_idx` (`tag_id` ASC),
  INDEX `tag_parent_tag_value_fk_idx` (`tag_value_id` ASC),
  CONSTRAINT `tag_parent_tag_fk`
    FOREIGN KEY (`tag_id`)
    REFERENCES `mydb`.`tag` (`tag_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `tag_parent_tag_value_fk`
    FOREIGN KEY (`tag_value_id`)
    REFERENCES `mydb`.`tag_value` (`tag_value_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`media_tag`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`media_tag` ;

CREATE TABLE IF NOT EXISTS `mydb`.`media_tag` (
  `media_tag_id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT NOT NULL,
  `tag_id` INT NOT NULL,
  `media_id` INT NOT NULL,
  `tag_value_id` INT NOT NULL,
  UNIQUE INDEX `media_tag_id_UNIQUE` (`media_tag_id` ASC),
  PRIMARY KEY (`media_tag_id`),
  INDEX `media_tag_user_fk_idx` (`user_id` ASC),
  INDEX `media_tag_tag_fk_idx` (`tag_id` ASC),
  INDEX `media_tag_media_fk_idx` (`media_id` ASC),
  INDEX `media_tag_tag_value_fk_idx` (`tag_value_id` ASC),
  CONSTRAINT `media_tag_user_fk`
    FOREIGN KEY (`user_id`)
    REFERENCES `mydb`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `media_tag_tag_fk`
    FOREIGN KEY (`tag_id`)
    REFERENCES `mydb`.`tag` (`tag_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `media_tag_media_fk`
    FOREIGN KEY (`media_id`)
    REFERENCES `mydb`.`media` (`media_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `media_tag_tag_value_fk`
    FOREIGN KEY (`tag_value_id`)
    REFERENCES `mydb`.`tag_value` (`tag_value_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`project`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`project` ;

CREATE TABLE IF NOT EXISTS `mydb`.`project` (
  `project_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(64) NOT NULL,
  PRIMARY KEY (`project_id`),
  UNIQUE INDEX `project_id_UNIQUE` (`project_id` ASC),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`project_tag`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`project_tag` ;

CREATE TABLE IF NOT EXISTS `mydb`.`project_tag` (
  `project_id` INT NOT NULL,
  `tag_id` INT NOT NULL,
  PRIMARY KEY (`project_id`, `tag_id`),
  INDEX `project_tag_tag_idx` (`tag_id` ASC),
  CONSTRAINT `project_tag_project_fk`
    FOREIGN KEY (`project_id`)
    REFERENCES `mydb`.`project` (`project_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `project_tag_tag_fk`
    FOREIGN KEY (`tag_id`)
    REFERENCES `mydb`.`tag` (`tag_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
